##--------------------------------------------------------------------
## rmqtt-bridge-egress-mqtt
##--------------------------------------------------------------------

# See more keys and their definitions at https://github.com/rmqtt/rmqtt/blob/master/docs/en_US/bridge-egress-mqtt.md

[[bridges]]
# Whether to enable
enable = true
# Bridge name
name = "bridge_name_1"
# Client ID prefix
client_id_prefix = "prefix"
# Address and port of the remote MQTT broker
server = "tcp://127.0.0.1:3883"
#server = "tls://127.0.0.1:9883"
##SSL / TLS Certificate Type
#CA signed server certificate
#root_cert = "./rmqtt-bin/root.pem"
##CA or Self signed certificates
#Client Certificate File
#client_cert = "./rmqtt-bin/client.pem"
#Client key file
#client_key = "./rmqtt-bin/client.key"

# Username to connect to the remote MQTT broker
username = "rmqtt_u"
# Password to connect to the remote MQTT broker
password = "public"

# Maximum limit of clients connected to the remote MQTT broker
concurrent_client_limit = 5
# Connection timeout
connect_timeout = "20s"
# Keepalive interval
keepalive = "60s"
# Automatic reconnection interval
reconnect_interval = "5s"
# Specifies the maximum number of messages that the channel can hold simultaneously.
message_channel_capacity = 100_000
# MQTT protocol version to use: v4, v5 corresponding to MQTT 3.1.1, 5.0
mqtt_ver = "v5"

# The following configurations are specific to the protocol version
# Clear session state
v4.clean_session = true
# Last will message configuration, optional
# Message encoding method, supports plain and base64, default: plain
v4.last_will = {qos = 0, retain = false, topic = "a/b/c", message = "message content", encoding = "plain"}
# Or
# Clear session state on connection
v5.clean_start = true
# Session expiry interval, 0 means the session will end immediately upon network disconnection
v5.session_expiry_interval = "0s"
# Limit the maximum number of QoS 1 and QoS 2 messages the client can handle simultaneously
v5.receive_maximum = 16
# Negotiate the maximum packet size with the client and server
v5.maximum_packet_size = "1M"
# Negotiate the maximum number of topic aliases with the client and server
v5.topic_alias_maximum = 0
# Last will message configuration, optional
v5.last_will = {qos = 0, retain = false, topic = "a/b/c", message = "message content", encoding = "plain"}

[[bridges.entries]]
#Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic/egress/#"

# Choose 0, 1, 2, or not set (follow message QoS)
remote.qos = 1
# true/false, default: false
remote.retain = false
# Topic for messages forwarded to the remote MQTT server, where ${local.topic} represents the original topic of the forwarded message.
remote.topic = "remote/topic/egress/${local.topic}"

[[bridges.entries]]
#Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic/egress/a"

# Choose 0, 1, 2, or not set (follow message QoS)
remote.qos = 1
# true/false, default: false
remote.retain = false
# Topic for messages forwarded to the remote MQTT server, where ${local.topic} represents the original topic of the forwarded message.
remote.topic = "remote/topic/egress/a/${local.topic}"

[[bridges.entries]]
#Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic/egress/a/#"

# Choose 0, 1, 2, or not set (follow message QoS)
remote.qos = 1
# true/false, default: false
remote.retain = false
# Topic for messages forwarded to the remote MQTT server, where ${local.topic} represents the original topic of the forwarded message.
remote.topic = "remote/topic/egress/a/a/${local.topic}"


#-----------------------------------------------------------
[[bridges]]
# Whether to enable
enable = false
# Bridge name
name = "bridge_name_2"
# Client ID prefix
client_id_prefix = "prefix"
# Address and port of the remote MQTT broker
server = "tcp://127.0.0.1:3883"
#server = "tls://127.0.0.1:9883"
##SSL / TLS Certificate Type
#CA signed server certificate
#root_cert = "./rmqtt-bin/root.pem"
##CA or Self signed certificates
#Client Certificate File
#client_cert = "./rmqtt-bin/client.pem"
#Client key file
#client_key = "./rmqtt-bin/client.key"

# Username to connect to the remote MQTT broker
username = "rmqtt_u"
# Password to connect to the remote MQTT broker
password = "public"

# Maximum limit of clients connected to the remote MQTT broker
concurrent_client_limit = 5
# Connection timeout
connect_timeout = "20s"
# Keepalive interval
keepalive = "60s"
# Automatic reconnection interval
reconnect_interval = "5s"
# MQTT protocol version to use: v4, v5 corresponding to MQTT 3.1.1, 5.0
mqtt_ver = "v4"

# The following configurations are specific to the protocol version
# Clear session state
v4.clean_session = true

[[bridges.entries]]
#Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic/egress/#"

# Choose 0, 1, 2, or not set (follow message QoS)
#remote.qos = 1
# true/false, default: false
#remote.retain = false
# Topic for messages forwarded to the remote MQTT server, where ${local.topic} represents the original topic of the forwarded message.
remote.topic = "remote/topic2/egress/${local.topic}"






