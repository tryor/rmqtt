##--------------------------------------------------------------------
## rmqtt-bridge-egress-reductstore
##--------------------------------------------------------------------

# See more keys and their definitions at https://github.com/rmqtt/rmqtt/blob/master/docs/en_US/bridge-egress-reductstore.md

[[bridges]]
# Whether to enable
enable = true
# Bridge name
name = "bridge_reductstore_1"
# The address of the reductstore broker that the client will connect to using plain TCP.
# In this case, it's connecting to the local broker at port 8383.
servers = "http://127.0.0.1:8383"

# producer name prefix
producer_name_prefix = "producer_1"

# Set the API token to use for authentication.
#api_token = ""
# Set the timeout for HTTP requests.
#timeout = "15s"
# Set the SSL verification to false.
#verify_ssl = false

[[bridges.entries]]
# Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic1/egress/#"

# The name of the bucket
remote.bucket = "bucket1"
remote.entry = "test1"
# Set the quota size.
remote.quota_size = 1_000_000_000
# Don't fail if the bucket already exists.
remote.exist_ok = true
# forward all from data, including: from_type, from_node, from_ipaddress, from_clientid, from_username
remote.forward_all_from = true
# forward all publish data, including: dup, retain, qos, packet_id, topic (required to forward), payload (required to forward)
remote.forward_all_publish = true

[[bridges.entries]]
# Local topic filter: All messages matching this topic filter will be forwarded.
local.topic_filter = "local/topic2/egress/#"

remote.bucket = "bucket2"
remote.entry = "test2"
# Set the quota size.
remote.quota_size = 1_000_000_000
# Don't fail if the bucket already exists.
remote.exist_ok = true



